#!/bin/bash
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")
count=0

# Functions
function do_embed() {
	# Parameters: $1 = album art file path, $2 = MP3 file
	echo "[*] Obtaining original metadata..."

	if [[ $(id3v2 -l "$2" | grep 'No ID3v2 tag') != "" ]]; then
		# Use ID3v1 tags
		title="$(id3v2 -l "$2" | grep 'Title' | sed 's/Artist.*//g' | sed 's/Title  : //')"
		album="$(id3v2 -l "$2" | grep 'Album' | sed 's/Year.*//g' | sed 's/Album  : //')"
		artist="$(id3v2 -l "$2" | grep 'Artist' | sed 's/.*Artist: //')"
		number="$(id3v2 -l "$2" | grep 'Track' | sed 's/.*Track: //')/$(ls ./*.mp3 | wc -l | sed 's/      //')"   # Track number based on # of mp3s in folder
		year="$(id3v2 -l "$2" | grep 'Year' | sed 's/.*Year: //' | sed 's/,.*//')"
		genre="$(id3v2 -l "$2" | grep 'Genre' | sed 's/.*Genre: //' | sed 's/ (.*//')"
	else
		# Use ID3v2 tags
		title="$(id3v2 -l "$2" | grep 'TIT2' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
		album="$(id3v2 -l "$2" | grep 'TALB' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
		artist="$(id3v2 -l "$2" | grep 'TPE1' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
		number="$(id3v2 -l "$2" | grep 'TRCK' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
		year="$(id3v2 -l "$2" | grep 'TYER' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
		genre="$(id3v2 -l "$2" | grep 'TCON' | sed 's/^.*\():*\)/\1/g' | cut -f 2 -d ':' | cut -c 2-)"
	fi
	
	echo "[*] Re-encoding..."
	lame --quiet --ti "$1" --tt "$title" --ta "$artist" --tl "$album" --tn "$number" --tg "$genre" --ty "$year" "$2" ".temp.mp3"
	rm -f "$2"
	mv .temp.mp3 "$2"
	count=$((count+1))
}
function do_embed_file() {
	# Parameters: $1 = album art, $2 = MP3 file
	echo -e "\nEmbedding art in \"$2\"... "
	
	# Check if filename contains single quote
	if [[ $(echo "$2" | grep "'") != "" ]]; then
		mv "$2" ".tmp.mp3"
		do_embed "$1" '.tmp.mp3'
		mv .tmp.mp3 "$2"
	else
		filename=$(basename "$2")
		extension="${filename##*.}"
		filename="${filename%.*}"
		do_embed "$1" "$filename.$extension"
	fi
	echo -e "[*] Done."
}
function do_embed_folder() {
	# Parameter: $1 = album art
	if [[ $(do_check_mp3) != "" ]]; then
		for f in $(ls *.mp3); do
			do_embed_file "$1" "$f"
			count=$((count+1))
		done
		echo "Decorated $count MP3 files."
	else
		echo "No MP3 files in current folder."
	fi
}
function do_check_mp3() {
	currentfolder=$(ls *.mp3 | wc -l)
	echo $currentfolder
}
function do_display_help() {
	echo "embedart 1.0 - by aureljared@GitHub"
	echo "    Embeds album art in a file or a group of files with the same album."
	echo "Usage: $(tput bold)embedart [options] [file(s)]$(tput sgr0)"
	echo "Options:"
	echo "    -r <album art file>         -  Embeds <album art file> in all MP3 files in current folder."
	echo "    -f <album art file> <mp3>   -  Embeds <album art file> in <mp3>."
	echo "    -h                          -  Displays this help message."
	exit
}
function do_check_params() {
	if [[ $1 == "-r" ]]; then
		do_embed_folder "$2"
	elif [[ $1 == "-f" ]]; then
		do_embed_file "$2" "$3"
	elif [[ $1 == "-h" ]]; then
		do_display_help
	elif [[ ! $1 ]]; then
		echo -e "Missing parameters.\n"
		do_display_help
	else
		echo -e "Invalid option: $1.\n"
		do_display_help
	fi
}

do_check_params "$@"

IFS=$SAVEIFS
exit 0
